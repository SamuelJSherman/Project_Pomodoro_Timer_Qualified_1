{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\FocusTimer.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/**\r\n * A component that shows the time remaining when the timer is on.\r\n * @param {Object} props - The properties passed on to this component.\r\n * @param {getTime} props.getTime - A function that gives a time in mm:ss.\r\n * @param {get} props.get - Gets a key of the timer object.\r\n * @returns {JSX} - A <div> element containing information about the timer.\r\n */\n\nfunction FocusTimer({\n  getTime,\n  get\n}) {\n  if (!get(\"sessionStarted\")) return null;\n  const currMode = get(\"focus\") ? \"focus\" : \"break\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, get(\"focus\") ? \"Focusing \" : \"On Break \", \"for \", getTime(`${currMode}Max`), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, getTime(`${currMode}Left`), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !get(\"isTimerRunning\") ? \"PAUSED\" : \"\")));\n}\n\nFocusTimer.propTypes = {\n  get: PropTypes.func.isRequired,\n  getTime: PropTypes.func.isRequired\n};\nexport default FocusTimer;","map":{"version":3,"sources":["C:/Users/samue/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusTimer.js"],"names":["React","PropTypes","FocusTimer","getTime","get","currMode","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAqB;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAArB,EAAsC;AACrC,MAAG,CAACA,GAAG,CAAC,gBAAD,CAAP,EAA2B,OAAO,IAAP;AAE3B,QAAMC,QAAQ,GAAGD,GAAG,CAAC,OAAD,CAAH,GAAe,OAAf,GAAyB,OAA1C;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,GAAG,CAAC,OAAD,CAAH,GAAe,WAAf,GAA6B,WAD/B,UAEMD,OAAO,CAAE,GAAEE,QAAS,KAAb,CAFb,aADD,eAKC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,OAAO,CAAE,GAAEE,QAAS,MAAb,CADT,eALD,eAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAACD,GAAG,CAAC,gBAAD,CAAJ,GAAyB,QAAzB,GAAoC,EAAzC,CARD,CADD,CADD;AAeA;;AAEDF,UAAU,CAACI,SAAX,GAAuB;AACtBF,EAAAA,GAAG,EAAEH,SAAS,CAACM,IAAV,CAAeC,UADE;AAEtBL,EAAAA,OAAO,EAAEF,SAAS,CAACM,IAAV,CAAeC;AAFF,CAAvB;AAKA,eAAeN,UAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * A component that shows the time remaining when the timer is on.\r\n * @param {Object} props - The properties passed on to this component.\r\n * @param {getTime} props.getTime - A function that gives a time in mm:ss.\r\n * @param {get} props.get - Gets a key of the timer object.\r\n * @returns {JSX} - A <div> element containing information about the timer.\r\n */\r\nfunction FocusTimer( {getTime, get} ) {\r\n\tif(!get(\"sessionStarted\")) return null;\r\n\r\n\tconst currMode = get(\"focus\") ? \"focus\" : \"break\";\r\n\t\r\n\treturn (\r\n\t\t<div className=\"row mb-2\">\r\n\t\t\t<div className=\"col\">\r\n\t\t\t\t<h2 data-testid=\"session-title\">\r\n\t\t\t\t\t{get(\"focus\") ? \"Focusing \" : \"On Break \"}\r\n\t\t\t\t\tfor {getTime(`${currMode}Max`)} minutes\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p className=\"lead\" data-testid=\"session-sub-title\">\r\n\t\t\t\t\t{getTime(`${currMode}Left`)} remaining\r\n\t\t\t\t</p>\r\n\t\t\t\t<h3>{!get(\"isTimerRunning\") ? \"PAUSED\" : \"\"}</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nFocusTimer.propTypes = {\r\n\tget: PropTypes.func.isRequired,\r\n\tgetTime: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FocusTimer;"]},"metadata":{},"sourceType":"module"}